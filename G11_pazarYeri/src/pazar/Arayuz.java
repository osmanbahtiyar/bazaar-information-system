/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pazar;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author semih
 */
public class Arayuz extends javax.swing.JFrame {
    private DefaultTableModel model;
    private JTable tbl;
    private JScrollPane sp;
    private final Connection conn;
    private int btnSelect = 0;
    /**
     * Creates new form Arayuz
     * @param conn
     */
    public Arayuz(Connection conn) {
        initComponents();
        this.conn = conn;
        butonlar.setVisible(false);
    }
    /*    
        Object[] columnNames = {"Ad","Soyad"};
        model = new DefaultTableModel(columnNames,0);
        tbl = new JTable(model);
        sp = new JScrollPane(tbl);
        sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
        this.tablo_panel.add(sp);
    */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tablo_panel = new javax.swing.JPanel();
        butonlar = new javax.swing.JPanel();
        btn2 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Semt Pazar Yeri Bilgi Sistemi");
        setBackground(new java.awt.Color(0, 102, 204));
        setResizable(false);

        jPanel4.setBackground(new java.awt.Color(0, 102, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Panel");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pazar/online-store.png"))); // NOI18N
        jButton1.setText("Tezgahlar");
        jButton1.setBorderPainted(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pazar/29-512.png"))); // NOI18N
        jButton2.setText("Çalışanlar");
        jButton2.setBorderPainted(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 204, 255));
        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pazar/0_EHBTsliYMzZc1Tdb_.png"))); // NOI18N
        jButton3.setText("Ürünler");
        jButton3.setBorderPainted(false);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton3MouseExited(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(204, 204, 255));
        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pazar/iconfinder_bill_416404 (1).png"))); // NOI18N
        jButton4.setText("Satış Kayıtları");
        jButton4.setBorderPainted(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton4MouseExited(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(204, 204, 255));
        jButton5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton5.setText("Ana Sayfa");
        jButton5.setBorderPainted(false);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton5MouseExited(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pazar/free-exit-logout-icon-2857-thumb (2).png"))); // NOI18N
        jButton6.setText("Bağlantıyı Kapat");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton6MouseExited(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pazar/add1.png"))); // NOI18N
        jButton7.setText("Ekle");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton7MouseExited(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pazar/delete.png"))); // NOI18N
        jButton8.setText("Sil");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton8MouseExited(evt);
            }
        });
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pazar/edit.png"))); // NOI18N
        jButton9.setText("Güncelle");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton9MouseExited(evt);
            }
        });
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pazar/sat.png"))); // NOI18N
        jButton10.setText("Urun Sat");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton10MouseExited(evt);
            }
        });
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
        );

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 14)); // NOI18N
        jLabel2.setText("<html><p>Semt Pazar Yeri</p>\n<p>Bilgi Sistemi</p></html>");

        tablo_panel.setBackground(new java.awt.Color(0, 102, 204));
        tablo_panel.setForeground(new java.awt.Color(106, 0, 142));

        javax.swing.GroupLayout tablo_panelLayout = new javax.swing.GroupLayout(tablo_panel);
        tablo_panel.setLayout(tablo_panelLayout);
        tablo_panelLayout.setHorizontalGroup(
            tablo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1040, Short.MAX_VALUE)
        );
        tablo_panelLayout.setVerticalGroup(
            tablo_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 712, Short.MAX_VALUE)
        );

        butonlar.setBackground(new java.awt.Color(0, 102, 204));

        btn2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout butonlarLayout = new javax.swing.GroupLayout(butonlar);
        butonlar.setLayout(butonlarLayout);
        butonlarLayout.setHorizontalGroup(
            butonlarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(butonlarLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        butonlarLayout.setVerticalGroup(
            butonlarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, butonlarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(butonlarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tablo_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(butonlar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(74, 74, 74)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(butonlar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tablo_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 729, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        btnSelect = 1;
        try {
            tablo_panel.removeAll();
            tablo_panel.revalidate();
            tablo_panel.repaint();
            Object[] columnNames = {"Tezgah No","Alan (m2)","Kira(TL)","Max Stok (kg)"};
            model = new DefaultTableModel(columnNames,0);
            ArrayList<Integer[]> arr = Database.getTezgahlar();
            arr.forEach((ints) -> {
                model.addRow((Object[])ints);
            });
            tbl = new JTable(model);
            sp = new JScrollPane(tbl);
            sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
            this.tablo_panel.add(sp);
            
        } catch (SQLException ex) {
            Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
        }
        btn1.setText("<html><p>Kirası 2000 TL'den</p><p>Fazla Olan Tezgahlar</p>");
        btn2.setText("<html><p>Alanı 30 m2'den</p><p>Az Olan Tezgahlar</p>");
        btn3.setText("<html><p>Max Stoğu 400kg'den</p><p>Fazla Olan Tezgahlar</p>");
        btn4.setText("<html><p>1'den Fazla Çalışanı</p> <p>Bulunan Tezgahlar</p>");
        butonlar.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    
  
    
    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        jButton1.setBackground(new Color(106,0,142));
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        jButton1.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        jButton2.setBackground(new Color(106,0,142));
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
        jButton2.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_jButton2MouseExited

    private void jButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseEntered
        jButton3.setBackground(new Color(106,0,142));
    }//GEN-LAST:event_jButton3MouseEntered

    private void jButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseExited
        jButton3.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_jButton3MouseExited

    private void jButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseEntered
        jButton4.setBackground(new Color(106,0,142));
    }//GEN-LAST:event_jButton4MouseEntered

    private void jButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseExited
        jButton4.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_jButton4MouseExited

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        btnSelect = 2;
        try {
            tablo_panel.removeAll();
            tablo_panel.revalidate();
            tablo_panel.repaint();
            Object[] columnNames = {"Calisan_id","TC","İsim Soyisim","Tel. No","Cinsiyet","Dogum Tarihi","Calistigi Tezgah","Sahibi Oldugu Tezgah"};
            
            model = new DefaultTableModel(columnNames,0);
            ArrayList<Object[]> arr = Database.getCalisanlar();
            for (Object[] objects : arr) {
                model.addRow(objects);
            }
            tbl = new JTable(model);
            sp = new JScrollPane(tbl);
            sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
            this.tablo_panel.add(sp);
            
        } catch (SQLException ex) {
            Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
        }
        btn1.setText("<html><p>50 Yaşından Büyük</p><p>Olan Çalışanlar</p>");
        btn2.setText("<html><p>Çalışanları İsimlerine</p><p>Göre Sırala</p>");
        btn3.setText("<html><p>Tezgah Sahibi Olan</p><p>Çalışanlar</p>");
        btn4.setText("<html><p>Tezgah Sahibi Olmayan</p> <p>Çalışanlar</p>");
        butonlar.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        btnSelect = 3;
        try {
            tablo_panel.removeAll();
            tablo_panel.revalidate();
            tablo_panel.repaint();
            Object[] columnNames = {"Ürün ID","Satıldığı Tezgah","Ürün Türü","Ürün Adı","Birim Fiyat(TL)","Stok(kg)"};
            
            model = new DefaultTableModel(columnNames,0);
            ArrayList<Object[]> arr = Database.getUrunler();
            for (Object[] objects : arr) {
                model.addRow(objects);
            }
            tbl = new JTable(model);
            sp = new JScrollPane(tbl);
            sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
            this.tablo_panel.add(sp);
            
        } catch (SQLException ex) {
            Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
        }
        btn1.setText("<html><p>Birim Fiyata Göre</p><p>Artan Sırala</p>");
        btn2.setText("<html><p>Birim Fiyata Göre</p><p>Azalan Sırala</p>");
        btn3.setText("<html><p>Stoğa Göre</p><p>Artan Sırala</p>");
        btn4.setText("<html><p>Stoğa Göre</p> <p>Azalan Sırala</p>");
        butonlar.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
        jButton5.setBackground(new Color(106,0,142));
    }//GEN-LAST:event_jButton5MouseEntered

    private void jButton5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseExited
        jButton5.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_jButton5MouseExited

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        btnSelect = 0;
        butonlar.setVisible(false);
        tablo_panel.removeAll();
        tablo_panel.revalidate();
        tablo_panel.repaint();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        btnSelect = 4;
        try {
            tablo_panel.removeAll();
            tablo_panel.revalidate();
            tablo_panel.repaint();
            Object[] columnNames = {"Ürün ID","Tezgah No","Miktar(kg)","Birim Fiyat(TL)","Tarih","Satici ID","Toplam Tutar"};
            
            model = new DefaultTableModel(columnNames,0);
            ArrayList<Object[]> arr = Database.getSatisKaydi();
            for (Object[] objects : arr) {
                model.addRow(objects);
            }
            tbl = new JTable(model);
            sp = new JScrollPane(tbl);
            sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
            this.tablo_panel.add(sp);
            
        } catch (SQLException ex) {
            Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
        }
        btn1.setText("<html><p>Toplam Tutara Göre</p><p>Artan Sırala</p>");
        btn2.setText("<html><p>Toplam Tutara Göre</p><p>Azalan Sırala</p>");
        btn3.setText("<html><p>Tarihe Göre</p><p>Yeniden Eskiye Sırala</p>");
        btn4.setText("<html><p>Tarihe Göre</p> <p>Eskiden Yeniye Sırala</p>");
        butonlar.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseEntered
        jButton6.setBackground(new Color(106,0,142));
    }//GEN-LAST:event_jButton6MouseEntered

    private void jButton6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseExited
        jButton6.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_jButton6MouseExited

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            btnSelect = 0;
            butonlar.setVisible(false);
            tablo_panel.removeAll();
            tablo_panel.revalidate();
            tablo_panel.repaint();
            this.conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseEntered
        jButton7.setBackground(new Color(106,0,142));
    }//GEN-LAST:event_jButton7MouseEntered

    private void jButton7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseExited
        jButton7.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_jButton7MouseExited

    private void jButton8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseEntered
        jButton8.setBackground(new Color(106,0,142));
    }//GEN-LAST:event_jButton8MouseEntered

    private void jButton8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseExited
        jButton8.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_jButton8MouseExited

    private void jButton9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseEntered
        jButton9.setBackground(new Color(106,0,142));
    }//GEN-LAST:event_jButton9MouseEntered

    private void jButton9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseExited
        jButton9.setBackground(UIManager.getColor("control"));
    }//GEN-LAST:event_jButton9MouseExited

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

            Ekle ekle = new Ekle(conn);
            ekle.setVisible(true);
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
            Sil sil = new Sil(conn);
            sil.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        Guncelle guncelle = new Guncelle(conn);
        guncelle.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10MouseEntered

    private void jButton10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10MouseExited

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        UrunSat sat = new UrunSat(conn);
        sat.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        tablo_panel.removeAll();
        tablo_panel.revalidate();
        tablo_panel.repaint();
        
        if(btnSelect == 1){
            Object[] columnNames = {"Ürün ID","Tezgah No","Miktar(kg)","Birim Fiyat(TL)","Tarih","Satici ID","Toplam Tutar"};
            model = new DefaultTableModel(columnNames,0);
            String query = "SELECT * from tezgahlar WHERE kira > 2000";
            ResultSet r = null;
            try {
                Statement s = conn.createStatement();
                r = s.executeQuery(query);
                int t_no = 0, alan = 0, kira = 0, max_stok = 0;
                while(r.next()){
                    Object[] t = new Object[4];
                    t_no = r.getInt(1);
                    alan = r.getInt(2);
                    kira = r.getInt(3);
                    max_stok = r.getInt(4);
                    t[0] = t_no; t[1] = alan; t[2] = kira; t[3] = max_stok;
                    model.addRow(t);
                    
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(btnSelect == 2){
            Object[] columnNames = {"Calisan_id","TC","İsim Soyisim","Tel. No","Cinsiyet","Dogum Tarihi","Calistigi Tezgah","Sahibi Oldugu Tezgah"};
            model = new DefaultTableModel(columnNames,0);
            String query = "SELECT * FROM calisanlar WHERE date_part('year',AGE(CURRENT_DATE,dogum_tarihi)) > 50";
            ResultSet r = null;
            try {
                Statement s = conn.createStatement();
                r = s.executeQuery(query);
                int c_id = 0, c_tezgah = 0, sahip = 0;
                String tc = "", isim="", tel = "", dg = "", cinsiyet = "";
                while(r.next()){
                    Object[] c = new Object[8];
                    c_id = r.getInt(1);
                    tc = r.getString(2);
                    isim = r.getString(3);
                    isim += " " + r.getString(4);
                    tel = r.getString(5);
                    cinsiyet = r.getString(6);
                    dg = r.getString(7);
                    c_tezgah = r.getInt(8);
                    sahip = r.getInt(9);
                    c[0] = c_id; c[1] = tc; c[2] = isim; c[3] = tel;
                    c[4] = cinsiyet; c[5] = dg; c[6] = c_tezgah; c[7] = sahip;
                    model.addRow(c);         
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(btnSelect == 3){
            Object[] columnNames = {"Ürün ID","Satıldığı Tezgah","Ürün Türü","Ürün Adı","Birim Fiyat(TL)","Stok(kg)"};
            model = new DefaultTableModel(columnNames,0);
            String query = "SELECT * FROM urunler ORDER BY birim_fiyat ASC";
            ResultSet r = null;
            try {
                Statement s = conn.createStatement();
                r = s.executeQuery(query);
                int id = 0, s_tezgah = 0, stok = 0;
                String tur = "", isim="";
                float fiyat = 0;
                while(r.next()){
                    Object[] u = new Object[6];
                    id = r.getInt(1);
                    s_tezgah = r.getInt(2);
                    tur = r.getString(3);
                    isim = r.getString(4);
                    fiyat = r.getFloat(5);
                    stok = r.getInt(6);
                    u[0] = id; u[1] = s_tezgah; u[2] = tur; u[3] = isim;
                    u[4] = fiyat; u[5] = stok;
                    model.addRow(u);         
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(btnSelect == 4){
            Object[] columnNames = {"Ürün ID","Tezgah No","Miktar(kg)","Birim Fiyat(TL)","Tarih","Satici ID","Toplam Tutar"};
            model = new DefaultTableModel(columnNames,0);
            String query = "SELECT * FROM satiskaydi ORDER BY toplam_tutar ASC";
            ResultSet r = null;
            try {
                Statement st = conn.createStatement();
                r = st.executeQuery(query);
                int id = 0, t_no = 0, miktar = 0, satici = 0;
                String tarih = "", isim="";
                float fiyat = 0, toplam=0;
                while(r.next()){
                    Object[] s = new Object[7];
                    id = r.getInt(2);
                    t_no = r.getInt(3);
                    miktar = r.getInt(4);
                    fiyat = r.getFloat(5);
                    tarih = r.getString(6);
                    satici = r.getInt(7);
                    toplam = r.getFloat(8);
                    s[0] = id; s[1] = t_no; s[2] = miktar; s[3] = fiyat;
                    s[4] = tarih; s[5] = satici; s[6] = toplam;
                    model.addRow(s);         
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        tablo_panel.removeAll();
        tablo_panel.revalidate();
        tablo_panel.repaint();
        if(btnSelect == 1){
            Object[] columnNames = {"Tezgah No","Alan (m2)","Kira (TL)","Max Stok (kg)"};
            model = new DefaultTableModel(columnNames,0);
            String query = "SELECT * from tezgahlar WHERE alan > 30";
            ResultSet r = null;
            try {
                Statement s = conn.createStatement();
                r = s.executeQuery(query);
                int t_no = 0, alan = 0, kira = 0, max_stok = 0;
                while(r.next()){
                    Object[] t = new Object[4];
                    t_no = r.getInt(1);
                    alan = r.getInt(2);
                    kira = r.getInt(3);
                    max_stok = r.getInt(4);
                    t[0] = t_no; t[1] = alan; t[2] = kira; t[3] = max_stok;
                    model.addRow(t);
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(btnSelect == 2){
            Object[] columnNames = {"Calisan_id","TC","İsim Soyisim","Tel. No","Cinsiyet","Dogum Tarihi","Calistigi Tezgah","Sahibi Oldugu Tezgah"};
            model = new DefaultTableModel(columnNames,0);
            String query = "SELECT * from alfabetik";
            ResultSet r = null;
            try {
                Statement s = conn.createStatement();
                r = s.executeQuery(query);
                int c_id = 0, c_tezgah = 0, sahip = 0;
                String tc = "", isim="", tel = "", dg = "", cinsiyet = "";
                while(r.next()){
                    Object[] c = new Object[8];
                    c_id = r.getInt(1);
                    tc = r.getString(2);
                    isim = r.getString(3);
                    isim += " " + r.getString(4);
                    tel = r.getString(5);
                    cinsiyet = r.getString(6);
                    dg = r.getString(7);
                    c_tezgah = r.getInt(8);
                    sahip = r.getInt(9);
                    c[0] = c_id; c[1] = tc; c[2] = isim; c[3] = tel;
                    c[4] = cinsiyet; c[5] = dg; c[6] = c_tezgah; c[7] = sahip;
                    model.addRow(c);         
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(btnSelect == 3){
            Object[] columnNames = {"Ürün ID","Satıldığı Tezgah","Ürün Türü","Ürün Adı","Birim Fiyat(TL)","Stok(kg)"};
            model = new DefaultTableModel(columnNames,0);
            String query = "SELECT * FROM urunler ORDER BY birim_fiyat DESC";
            ResultSet r = null;
            try {
                Statement s = conn.createStatement();
                r = s.executeQuery(query);
                int id = 0, s_tezgah = 0, stok = 0;
                String tur = "", isim="";
                float fiyat = 0;
                while(r.next()){
                    Object[] u = new Object[6];
                    id = r.getInt(1);
                    s_tezgah = r.getInt(2);
                    tur = r.getString(3);
                    isim = r.getString(4);
                    fiyat = r.getFloat(5);
                    stok = r.getInt(6);
                    u[0] = id; u[1] = s_tezgah; u[2] = tur; u[3] = isim;
                    u[4] = fiyat; u[5] = stok;
                    model.addRow(u);         
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(btnSelect == 4){
            Object[] columnNames = {"Ürün ID","Tezgah No","Miktar(kg)","Birim Fiyat(TL)","Tarih","Satici ID","Toplam Tutar"};
            model = new DefaultTableModel(columnNames,0);
            String query = "SELECT * FROM satiskaydi ORDER BY toplam_tutar DESC";
            ResultSet r = null;
            try {
                Statement st = conn.createStatement();
                r = st.executeQuery(query);
                int id = 0, t_no = 0, miktar = 0, satici = 0;
                String tarih = "", isim="";
                float fiyat = 0, toplam=0;
                while(r.next()){
                    Object[] s = new Object[7];
                    id = r.getInt(2);
                    t_no = r.getInt(3);
                    miktar = r.getInt(4);
                    fiyat = r.getFloat(5);
                    tarih = r.getString(6);
                    satici = r.getInt(7);
                    toplam = r.getFloat(8);
                    s[0] = id; s[1] = t_no; s[2] = miktar; s[3] = fiyat;
                    s[4] = tarih; s[5] = satici; s[6] = toplam;
                    model.addRow(s);         
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        tablo_panel.removeAll();
        tablo_panel.revalidate();
        tablo_panel.repaint();
        
        if(btnSelect == 1){
            Object[] columnNames = {"Tezgah No","Alan (m2)","Kira (TL)","Max Stok (kg)"};
            model = new DefaultTableModel(columnNames,0);
            String query = "SELECT * from tezgahlar WHERE max_stok > 400";
            ResultSet r = null;
            try {
                Statement s = conn.createStatement();
                r = s.executeQuery(query);
                int t_no = 0, alan = 0, kira = 0, max_stok = 0;
                while(r.next()){
                    Object[] t = new Object[4];
                    t_no = r.getInt(1);
                    alan = r.getInt(2);
                    kira = r.getInt(3);
                    max_stok = r.getInt(4);
                    t[0] = t_no; t[1] = alan; t[2] = kira; t[3] = max_stok;
                    model.addRow(t);
                    
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(btnSelect == 2){
            Object[] columnNames = {"Calisan_id","TC","İsim Soyisim","Tel. No","Cinsiyet","Dogum Tarihi","Calistigi Tezgah","Sahibi Oldugu Tezgah"};
            model = new DefaultTableModel(columnNames,0);
            String query = "SELECT * FROM calisanlar WHERE sahibi_oldugu_tezgah is not null";
            ResultSet r = null;
            try {
                Statement s = conn.createStatement();
                r = s.executeQuery(query);
                int c_id = 0, c_tezgah = 0, sahip = 0;
                String tc = "", isim="", tel = "", dg = "", cinsiyet = "";
                while(r.next()){
                    Object[] c = new Object[8];
                    c_id = r.getInt(1);
                    tc = r.getString(2);
                    isim = r.getString(3);
                    isim += " " + r.getString(4);
                    tel = r.getString(5);
                    cinsiyet = r.getString(6);
                    dg = r.getString(7);
                    c_tezgah = r.getInt(8);
                    sahip = r.getInt(9);
                    c[0] = c_id; c[1] = tc; c[2] = isim; c[3] = tel;
                    c[4] = cinsiyet; c[5] = dg; c[6] = c_tezgah; c[7] = sahip;
                    model.addRow(c);         
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(btnSelect == 3){
            Object[] columnNames = {"Ürün ID","Satıldığı Tezgah","Ürün Türü","Ürün Adı","Birim Fiyat(TL)","Stok(kg)"};
            model = new DefaultTableModel(columnNames,0);
            String query = "SELECT * FROM urunler ORDER BY stok ASC";
            ResultSet r = null;
            try {
                Statement s = conn.createStatement();
                r = s.executeQuery(query);
                int id = 0, s_tezgah = 0, stok = 0;
                String tur = "", isim="";
                float fiyat = 0;
                while(r.next()){
                    Object[] u = new Object[6];
                    id = r.getInt(1);
                    s_tezgah = r.getInt(2);
                    tur = r.getString(3);
                    isim = r.getString(4);
                    fiyat = r.getFloat(5);
                    stok = r.getInt(6);
                    u[0] = id; u[1] = s_tezgah; u[2] = tur; u[3] = isim;
                    u[4] = fiyat; u[5] = stok;
                    model.addRow(u);         
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(btnSelect == 4){
            Object[] columnNames = {"Ürün ID","Tezgah No","Miktar(kg)","Birim Fiyat(TL)","Tarih","Satici ID","Toplam Tutar"};
            model = new DefaultTableModel(columnNames,0);
            String query = "select * from satiskaydi ORDER BY date_part('year',AGE(CURRENT_DATE,tarih)) ASC";
            ResultSet r = null;
            try {
                Statement st = conn.createStatement();
                r = st.executeQuery(query);
                int id = 0, t_no = 0, miktar = 0, satici = 0;
                String tarih = "";
                float fiyat = 0, toplam=0;
                while(r.next()){
                    Object[] s = new Object[7];
                    id = r.getInt(2);
                    t_no = r.getInt(3);
                    miktar = r.getInt(4);
                    fiyat = r.getFloat(5);
                    tarih = r.getString(6);
                    satici = r.getInt(7);
                    toplam = r.getFloat(8);
                    s[0] = id; s[1] = t_no; s[2] = miktar; s[3] = fiyat;
                    s[4] = tarih; s[5] = satici; s[6] = toplam;
                    model.addRow(s);         
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        tablo_panel.removeAll();
        tablo_panel.revalidate();
        tablo_panel.repaint();
        
        if(btnSelect == 1){
            Object[] columnNames = {"Tezgah No","Alan (m2)","Kira (TL)","Max Stok (kg)"};
            model = new DefaultTableModel(columnNames,0);
            String query = "select * from tezgahlar where tezgah_no IN "
                    + "(SELECT tezgah_no from tezgahlar, calisanlar WHERE tezgah_no = calistigi_tezgah " 
                    + "GROUP BY tezgah_no HAVING count(*) > 1)";
            ResultSet r = null;
            try {
                Statement s = conn.createStatement();
                r = s.executeQuery(query);
                int t_no = 0, alan = 0, kira = 0, max_stok = 0;
                while(r.next()){
                    Object[] t = new Object[4];
                    t_no = r.getInt(1);
                    alan = r.getInt(2);
                    kira = r.getInt(3);
                    max_stok = r.getInt(4);
                    t[0] = t_no; t[1] = alan; t[2] = kira; t[3] = max_stok;
                    model.addRow(t);
                    
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(btnSelect == 2){
            Object[] columnNames = {"Calisan_id","TC","İsim Soyisim","Tel. No","Cinsiyet","Dogum Tarihi","Calistigi Tezgah","Sahibi Oldugu Tezgah"};
            model = new DefaultTableModel(columnNames,0);
            String query = "SELECT * FROM calisanlar WHERE sahibi_oldugu_tezgah is null";
            ResultSet r = null;
            try {
                Statement s = conn.createStatement();
                r = s.executeQuery(query);
                int c_id = 0, c_tezgah = 0, sahip = 0;
                String tc = "", isim="", tel = "", dg = "", cinsiyet = "";
                while(r.next()){
                    Object[] c = new Object[8];
                    c_id = r.getInt(1);
                    tc = r.getString(2);
                    isim = r.getString(3);
                    isim += " " + r.getString(4);
                    tel = r.getString(5);
                    cinsiyet = r.getString(6);
                    dg = r.getString(7);
                    c_tezgah = r.getInt(8);
                    sahip = r.getInt(9);
                    c[0] = c_id; c[1] = tc; c[2] = isim; c[3] = tel;
                    c[4] = cinsiyet; c[5] = dg; c[6] = c_tezgah; c[7] = sahip;
                    model.addRow(c);         
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(btnSelect == 3){
            Object[] columnNames = {"Ürün ID","Satıldığı Tezgah","Ürün Türü","Ürün Adı","Birim Fiyat(TL)","Stok(kg)"};
            model = new DefaultTableModel(columnNames,0);
            String query = "SELECT * FROM urunler ORDER BY stok DESC";
            ResultSet r = null;
            try {
                Statement s = conn.createStatement();
                r = s.executeQuery(query);
                int id = 0, s_tezgah = 0, stok = 0;
                String tur = "", isim="";
                float fiyat = 0;
                while(r.next()){
                    Object[] u = new Object[6];
                    id = r.getInt(1);
                    s_tezgah = r.getInt(2);
                    tur = r.getString(3);
                    isim = r.getString(4);
                    fiyat = r.getFloat(5);
                    stok = r.getInt(6);
                    u[0] = id; u[1] = s_tezgah; u[2] = tur; u[3] = isim;
                    u[4] = fiyat; u[5] = stok;
                    model.addRow(u);         
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(btnSelect == 4){
            Object[] columnNames = {"Ürün ID","Tezgah No","Miktar(kg)","Birim Fiyat(TL)","Tarih","Satici ID","Toplam Tutar"};
            model = new DefaultTableModel(columnNames,0);
            String query = "select * from satiskaydi ORDER BY date_part('year',AGE(CURRENT_DATE,tarih)) DESC";
            ResultSet r = null;
            try {
                Statement st = conn.createStatement();
                r = st.executeQuery(query);
                int id = 0, t_no = 0, miktar = 0, satici = 0;
                String tarih = "";
                float fiyat = 0, toplam=0;
                while(r.next()){
                    Object[] s = new Object[7];
                    id = r.getInt(2);
                    t_no = r.getInt(3);
                    miktar = r.getInt(4);
                    fiyat = r.getFloat(5);
                    tarih = r.getString(6);
                    satici = r.getInt(7);
                    toplam = r.getFloat(8);
                    s[0] = id; s[1] = t_no; s[2] = miktar; s[3] = fiyat;
                    s[4] = tarih; s[5] = satici; s[6] = toplam;
                    model.addRow(s);         
                }
                tbl = new JTable(model);
                sp = new JScrollPane(tbl);
                sp.setSize(tablo_panel.getWidth(), tablo_panel.getHeight());
                this.tablo_panel.add(sp);   
            } catch (SQLException ex) {
                Logger.getLogger(Arayuz.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn4ActionPerformed
    
    public void adjustVisibility(){
        this.setVisible(true);
    }
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Arayuz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Arayuz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Arayuz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Arayuz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Arayuz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JPanel butonlar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel tablo_panel;
    // End of variables declaration//GEN-END:variables
}
